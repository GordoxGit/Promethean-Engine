name: build-and-test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build ${{ matrix.os }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Debug, Release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.28.x'

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ninja-build \
            build-essential \
            autoconf \
            automake \
            libtool \
            pkg-config

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install ninja

      - name: Setup Ninja (Windows)
        if: runner.os == 'Windows'
        uses: seanmiddleditch/gha-setup-ninja@v5

      - name: Setup MSVC Dev Environment
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Cache vcpkg
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/vcpkg
            ${{ github.workspace }}/vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
          restore-keys: |
            ${{ runner.os }}-vcpkg-

      - name: Bootstrap vcpkg
        run: |
          if [ ! -d "vcpkg" ]; then
            git clone https://github.com/Microsoft/vcpkg.git
          fi
          cd vcpkg
          if [ "$RUNNER_OS" = "Windows" ]; then
            ./bootstrap-vcpkg.bat
          else
            ./bootstrap-vcpkg.sh
          fi
        shell: bash

      - name: Install vcpkg dependencies
        shell: bash
        run: |
          ./vcpkg/vcpkg install --x-manifest-root="${{ github.workspace }}" \
                                --x-install-root="${{ github.workspace }}/vcpkg_installed"

      - name: Configure CMake
        run: |
          if [ "$RUNNER_OS" = "Windows" ]; then
            cmake -B build \
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                  -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
                  -G "Visual Studio 17 2022" -A x64
          else
            cmake -B build \
                  -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                  -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
                  -G Ninja
          fi
        shell: bash

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} --parallel 4

      - name: Run tests
        run: |
          cd build
          if [ -f "CTestTestfile.cmake" ]; then
            ctest -C ${{ matrix.build_type }} --output-on-failure --verbose
          else
            echo "No tests found, skipping..."
          fi
        shell: bash
        continue-on-error: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: promethean-${{ matrix.os }}-${{ matrix.build_type }}
          path: |
            build/bin/
            build/**/*.exe
            build/**/*.dll
            build/**/*.so
            build/**/*.dylib
          retention-days: 7
          if-no-files-found: warn

  build-android:
    name: Build Android (${{ matrix.abi }}, ${{ matrix.build_type }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        abi: [arm64-v8a, armeabi-v7a]
        build_type: [Debug, Release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Android NDK
        run: |
          echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "ndk;25.2.9519653"
          echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build build-essential autoconf automake libtool pkg-config

      - name: Bootstrap vcpkg
        run: |
          if [ ! -d "vcpkg" ]; then
            git clone https://github.com/Microsoft/vcpkg.git
          fi
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Install vcpkg dependencies for Android
        run: |
          TRIPLET=${{ matrix.abi == 'arm64-v8a' && 'arm64-android' || 'arm-android' }}
          ./vcpkg/vcpkg install --x-manifest-root="${{ github.workspace }}" \
                                --x-install-root="${{ github.workspace }}/vcpkg_installed" \
                                --triplet=$TRIPLET

      - name: Configure CMake for Android
        run: |
          TRIPLET=${{ matrix.abi == 'arm64-v8a' && 'arm64-android' || 'arm-android' }}
          cmake -B build-android-${{ matrix.abi }} \
                -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
                -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
                -DVCPKG_TARGET_TRIPLET=$TRIPLET \
                -DANDROID_ABI=${{ matrix.abi }} \
                -DANDROID_PLATFORM=android-21 \
                -DANDROID_STL=c++_shared \
                -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                -G Ninja

      - name: Build Android
        run: cmake --build build-android-${{ matrix.abi }} --parallel 4

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: promethean-android-${{ matrix.abi }}-${{ matrix.build_type }}
          path: |
            build-android-${{ matrix.abi }}/**/*.so
            build-android-${{ matrix.abi }}/**/*.a
          retention-days: 7
